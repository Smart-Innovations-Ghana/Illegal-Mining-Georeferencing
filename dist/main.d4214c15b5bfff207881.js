/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkdji_aerial_georeferencing"] = self["webpackChunkdji_aerial_georeferencing"] || []).push([["main"],{

/***/ "./src/templates/drop.hbs":
/*!********************************!*\
  !*** ./src/templates/drop.hbs ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Handlebars = __webpack_require__(/*! ../../node_modules/handlebars/runtime.js */ \"./node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"1\":function(container,depth0,helpers,partials,data) {\n    return \"                <div class=\\\"bg-green-700 rounded-md shadow-lg text-center p-4 flex-1\\\">\\n                    <h3>Video Added</h3>\\n                    <i class=\\\"fa-regular fa-square-check text-4xl mt-4 mb-2\\\"></i>\\n                </div>\\n\";\n},\"3\":function(container,depth0,helpers,partials,data) {\n    return \"                <div id=\\\"videoButton\\\" class=\\\"bg-purple-700 rounded-md shadow-lg text-center p-4 flex-1 hover:bg-purple-600 cursor-pointer\\\">\\n                    <h3>Add Drone Video</h3>\\n                    <i class=\\\"fa-regular fa-video text-4xl mt-4 mb-2\\\"></i>\\n                </div>\\n\";\n},\"5\":function(container,depth0,helpers,partials,data) {\n    return \"                <div class=\\\"bg-green-700 rounded-md shadow-lg text-center p-4 flex-1\\\">\\n                    <h3>Flight Log Added</h3>\\n                    <i class=\\\"fa-regular fa-square-check text-4xl mt-4 mb-2\\\"></i>\\n                </div>\\n\";\n},\"7\":function(container,depth0,helpers,partials,data) {\n    return \"                <div id=\\\"flightLogButton\\\" class=\\\"bg-purple-700 rounded-md shadow-lg text-center p-4 flex-1 hover:bg-purple-600 cursor-pointer\\\">\\n                    <h3>Add Flight Log</h3>\\n                    <i class=\\\"fa-regular fa-file-csv text-4xl mt-4 mb-2\\\"></i>\\n                </div>\\n\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<div id=\\\"dropContainer\\\" class=\\\"w-full h-full bg-gray-900 text-purple-100 flex items-center justify-center\\\">\\n    <div class=\\\"py-4 px-8 bg-purple-900 rounded-md shadow-xl outline outline-1 outline-purple-400 outline-offset-4\\\">\\n        <h2 class=\\\"text-sm font-bold uppercase\\\">Roboflow / DJI</h2>\\n        <h1 class=\\\"text-2xl font-light\\\">Drone Video Georeferencing Demo</h1>\\n        <div class=\\\"flex space-x-4 mt-5 text-white\\\">\\n\"\n    + ((stack1 = lookupProperty(helpers,\"if\").call(alias1,(depth0 != null ? lookupProperty(depth0,\"videoFile\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.program(3, data, 0),\"data\":data,\"loc\":{\"start\":{\"line\":6,\"column\":12},\"end\":{\"line\":16,\"column\":19}}})) != null ? stack1 : \"\")\n    + ((stack1 = lookupProperty(helpers,\"if\").call(alias1,(depth0 != null ? lookupProperty(depth0,\"flightLogFile\") : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":container.program(5, data, 0),\"inverse\":container.program(7, data, 0),\"data\":data,\"loc\":{\"start\":{\"line\":17,\"column\":12},\"end\":{\"line\":27,\"column\":19}}})) != null ? stack1 : \"\")\n    + \"        </div>\\n        <p class=\\\"text-purple-400 text-center mt-5 text-sm\\\">Need Your Flight Log? <a class=\\\"hover:underline hover:text-white text-purple-200\\\" href=\\\"https://blog.roboflow.com/georeferencing-drone-videos/\\\" target=\\\"_blank\\\">Read the Blog Post</a></p>\\n        <p class=\\\"text-purple-400 text-center text-sm\\\">Just testing? <a class=\\\"hover:underline hover:text-white text-purple-200\\\" href=\\\"https://drive.google.com/drive/folders/1m0lmYyLEQJiaykf821rYtyRvlO5Q_SAf\\\" target=\\\"_blank\\\">Download Sample Files</a></p>\\n    </div>\\n</div>\\n\\n<div class=\\\"hidden\\\">\\n    <input id=\\\"videoInput\\\" type=\\\"file\\\" accept=\\\"video/*\\\">\\n    <input id=\\\"flightLogInput\\\" type=\\\"file\\\" accept=\\\"text/csv, application/csv\\\">\\n</div>\";\n},\"useData\":true});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdGVtcGxhdGVzL2Ryb3AuaGJzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLHNGQUEwQztBQUNuRSwwQkFBMEI7QUFDMUIsaUVBQWlFO0FBQ2pFO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNELDZFQUE2RTtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEhBQTBILHFCQUFxQiwrRkFBK0YsU0FBUyxxQkFBcUIsUUFBUSx3QkFBd0I7QUFDNVMsOEhBQThILHFCQUFxQiwrRkFBK0YsU0FBUyxzQkFBc0IsUUFBUSx3QkFBd0I7QUFDalQ7QUFDQSxDQUFDLGdCQUFnQiIsInNvdXJjZXMiOlsid2VicGFjazovL2RqaS1hZXJpYWwtZ2VvcmVmZXJlbmNpbmcvLi9zcmMvdGVtcGxhdGVzL2Ryb3AuaGJzP2U3MzciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEhhbmRsZWJhcnMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvcnVudGltZS5qc1wiKTtcbmZ1bmN0aW9uIF9fZGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiAob2JqLl9fZXNNb2R1bGUgPyBvYmpbXCJkZWZhdWx0XCJdIDogb2JqKTsgfVxubW9kdWxlLmV4cG9ydHMgPSAoSGFuZGxlYmFyc1tcImRlZmF1bHRcIl0gfHwgSGFuZGxlYmFycykudGVtcGxhdGUoe1wiMVwiOmZ1bmN0aW9uKGNvbnRhaW5lcixkZXB0aDAsaGVscGVycyxwYXJ0aWFscyxkYXRhKSB7XG4gICAgcmV0dXJuIFwiICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImJnLWdyZWVuLTcwMCByb3VuZGVkLW1kIHNoYWRvdy1sZyB0ZXh0LWNlbnRlciBwLTQgZmxleC0xXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxoMz5WaWRlbyBBZGRlZDwvaDM+XFxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cXFwiZmEtcmVndWxhciBmYS1zcXVhcmUtY2hlY2sgdGV4dC00eGwgbXQtNCBtYi0yXFxcIj48L2k+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlxcblwiO1xufSxcIjNcIjpmdW5jdGlvbihjb250YWluZXIsZGVwdGgwLGhlbHBlcnMscGFydGlhbHMsZGF0YSkge1xuICAgIHJldHVybiBcIiAgICAgICAgICAgICAgICA8ZGl2IGlkPVxcXCJ2aWRlb0J1dHRvblxcXCIgY2xhc3M9XFxcImJnLXB1cnBsZS03MDAgcm91bmRlZC1tZCBzaGFkb3ctbGcgdGV4dC1jZW50ZXIgcC00IGZsZXgtMSBob3ZlcjpiZy1wdXJwbGUtNjAwIGN1cnNvci1wb2ludGVyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxoMz5BZGQgRHJvbmUgVmlkZW88L2gzPlxcbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XFxcImZhLXJlZ3VsYXIgZmEtdmlkZW8gdGV4dC00eGwgbXQtNCBtYi0yXFxcIj48L2k+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlxcblwiO1xufSxcIjVcIjpmdW5jdGlvbihjb250YWluZXIsZGVwdGgwLGhlbHBlcnMscGFydGlhbHMsZGF0YSkge1xuICAgIHJldHVybiBcIiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJiZy1ncmVlbi03MDAgcm91bmRlZC1tZCBzaGFkb3ctbGcgdGV4dC1jZW50ZXIgcC00IGZsZXgtMVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8aDM+RmxpZ2h0IExvZyBBZGRlZDwvaDM+XFxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cXFwiZmEtcmVndWxhciBmYS1zcXVhcmUtY2hlY2sgdGV4dC00eGwgbXQtNCBtYi0yXFxcIj48L2k+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlxcblwiO1xufSxcIjdcIjpmdW5jdGlvbihjb250YWluZXIsZGVwdGgwLGhlbHBlcnMscGFydGlhbHMsZGF0YSkge1xuICAgIHJldHVybiBcIiAgICAgICAgICAgICAgICA8ZGl2IGlkPVxcXCJmbGlnaHRMb2dCdXR0b25cXFwiIGNsYXNzPVxcXCJiZy1wdXJwbGUtNzAwIHJvdW5kZWQtbWQgc2hhZG93LWxnIHRleHQtY2VudGVyIHAtNCBmbGV4LTEgaG92ZXI6YmctcHVycGxlLTYwMCBjdXJzb3ItcG9pbnRlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8aDM+QWRkIEZsaWdodCBMb2c8L2gzPlxcbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XFxcImZhLXJlZ3VsYXIgZmEtZmlsZS1jc3YgdGV4dC00eGwgbXQtNCBtYi0yXFxcIj48L2k+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlxcblwiO1xufSxcImNvbXBpbGVyXCI6WzgsXCI+PSA0LjMuMFwiXSxcIm1haW5cIjpmdW5jdGlvbihjb250YWluZXIsZGVwdGgwLGhlbHBlcnMscGFydGlhbHMsZGF0YSkge1xuICAgIHZhciBzdGFjazEsIGFsaWFzMT1kZXB0aDAgIT0gbnVsbCA/IGRlcHRoMCA6IChjb250YWluZXIubnVsbENvbnRleHQgfHwge30pLCBsb29rdXBQcm9wZXJ0eSA9IGNvbnRhaW5lci5sb29rdXBQcm9wZXJ0eSB8fCBmdW5jdGlvbihwYXJlbnQsIHByb3BlcnR5TmFtZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHBhcmVudCwgcHJvcGVydHlOYW1lKSkge1xuICAgICAgICAgIHJldHVybiBwYXJlbnRbcHJvcGVydHlOYW1lXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkXG4gICAgfTtcblxuICByZXR1cm4gXCI8ZGl2IGlkPVxcXCJkcm9wQ29udGFpbmVyXFxcIiBjbGFzcz1cXFwidy1mdWxsIGgtZnVsbCBiZy1ncmF5LTkwMCB0ZXh0LXB1cnBsZS0xMDAgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXJcXFwiPlxcbiAgICA8ZGl2IGNsYXNzPVxcXCJweS00IHB4LTggYmctcHVycGxlLTkwMCByb3VuZGVkLW1kIHNoYWRvdy14bCBvdXRsaW5lIG91dGxpbmUtMSBvdXRsaW5lLXB1cnBsZS00MDAgb3V0bGluZS1vZmZzZXQtNFxcXCI+XFxuICAgICAgICA8aDIgY2xhc3M9XFxcInRleHQtc20gZm9udC1ib2xkIHVwcGVyY2FzZVxcXCI+Um9ib2Zsb3cgLyBESkk8L2gyPlxcbiAgICAgICAgPGgxIGNsYXNzPVxcXCJ0ZXh0LTJ4bCBmb250LWxpZ2h0XFxcIj5Ecm9uZSBWaWRlbyBHZW9yZWZlcmVuY2luZyBEZW1vPC9oMT5cXG4gICAgICAgIDxkaXYgY2xhc3M9XFxcImZsZXggc3BhY2UteC00IG10LTUgdGV4dC13aGl0ZVxcXCI+XFxuXCJcbiAgICArICgoc3RhY2sxID0gbG9va3VwUHJvcGVydHkoaGVscGVycyxcImlmXCIpLmNhbGwoYWxpYXMxLChkZXB0aDAgIT0gbnVsbCA/IGxvb2t1cFByb3BlcnR5KGRlcHRoMCxcInZpZGVvRmlsZVwiKSA6IGRlcHRoMCkse1wibmFtZVwiOlwiaWZcIixcImhhc2hcIjp7fSxcImZuXCI6Y29udGFpbmVyLnByb2dyYW0oMSwgZGF0YSwgMCksXCJpbnZlcnNlXCI6Y29udGFpbmVyLnByb2dyYW0oMywgZGF0YSwgMCksXCJkYXRhXCI6ZGF0YSxcImxvY1wiOntcInN0YXJ0XCI6e1wibGluZVwiOjYsXCJjb2x1bW5cIjoxMn0sXCJlbmRcIjp7XCJsaW5lXCI6MTYsXCJjb2x1bW5cIjoxOX19fSkpICE9IG51bGwgPyBzdGFjazEgOiBcIlwiKVxuICAgICsgKChzdGFjazEgPSBsb29rdXBQcm9wZXJ0eShoZWxwZXJzLFwiaWZcIikuY2FsbChhbGlhczEsKGRlcHRoMCAhPSBudWxsID8gbG9va3VwUHJvcGVydHkoZGVwdGgwLFwiZmxpZ2h0TG9nRmlsZVwiKSA6IGRlcHRoMCkse1wibmFtZVwiOlwiaWZcIixcImhhc2hcIjp7fSxcImZuXCI6Y29udGFpbmVyLnByb2dyYW0oNSwgZGF0YSwgMCksXCJpbnZlcnNlXCI6Y29udGFpbmVyLnByb2dyYW0oNywgZGF0YSwgMCksXCJkYXRhXCI6ZGF0YSxcImxvY1wiOntcInN0YXJ0XCI6e1wibGluZVwiOjE3LFwiY29sdW1uXCI6MTJ9LFwiZW5kXCI6e1wibGluZVwiOjI3LFwiY29sdW1uXCI6MTl9fX0pKSAhPSBudWxsID8gc3RhY2sxIDogXCJcIilcbiAgICArIFwiICAgICAgICA8L2Rpdj5cXG4gICAgICAgIDxwIGNsYXNzPVxcXCJ0ZXh0LXB1cnBsZS00MDAgdGV4dC1jZW50ZXIgbXQtNSB0ZXh0LXNtXFxcIj5OZWVkIFlvdXIgRmxpZ2h0IExvZz8gPGEgY2xhc3M9XFxcImhvdmVyOnVuZGVybGluZSBob3Zlcjp0ZXh0LXdoaXRlIHRleHQtcHVycGxlLTIwMFxcXCIgaHJlZj1cXFwiaHR0cHM6Ly9ibG9nLnJvYm9mbG93LmNvbS9nZW9yZWZlcmVuY2luZy1kcm9uZS12aWRlb3MvXFxcIiB0YXJnZXQ9XFxcIl9ibGFua1xcXCI+UmVhZCB0aGUgQmxvZyBQb3N0PC9hPjwvcD5cXG4gICAgICAgIDxwIGNsYXNzPVxcXCJ0ZXh0LXB1cnBsZS00MDAgdGV4dC1jZW50ZXIgdGV4dC1zbVxcXCI+SnVzdCB0ZXN0aW5nPyA8YSBjbGFzcz1cXFwiaG92ZXI6dW5kZXJsaW5lIGhvdmVyOnRleHQtd2hpdGUgdGV4dC1wdXJwbGUtMjAwXFxcIiBocmVmPVxcXCJodHRwczovL2RyaXZlLmdvb2dsZS5jb20vZHJpdmUvZm9sZGVycy8xbTBsbVl5TEVRSmlheWtmODIxcll0eVJ2bE81UV9TQWZcXFwiIHRhcmdldD1cXFwiX2JsYW5rXFxcIj5Eb3dubG9hZCBTYW1wbGUgRmlsZXM8L2E+PC9wPlxcbiAgICA8L2Rpdj5cXG48L2Rpdj5cXG5cXG48ZGl2IGNsYXNzPVxcXCJoaWRkZW5cXFwiPlxcbiAgICA8aW5wdXQgaWQ9XFxcInZpZGVvSW5wdXRcXFwiIHR5cGU9XFxcImZpbGVcXFwiIGFjY2VwdD1cXFwidmlkZW8vKlxcXCI+XFxuICAgIDxpbnB1dCBpZD1cXFwiZmxpZ2h0TG9nSW5wdXRcXFwiIHR5cGU9XFxcImZpbGVcXFwiIGFjY2VwdD1cXFwidGV4dC9jc3YsIGFwcGxpY2F0aW9uL2NzdlxcXCI+XFxuPC9kaXY+XCI7XG59LFwidXNlRGF0YVwiOnRydWV9KTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/templates/drop.hbs\n");

/***/ }),

/***/ "./src/templates/map.hbs":
/*!*******************************!*\
  !*** ./src/templates/map.hbs ***!
  \*******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Handlebars = __webpack_require__(/*! ../../node_modules/handlebars/runtime.js */ \"./node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    return \"<div id=\\\"map\\\"></div>\";\n},\"useData\":true});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdGVtcGxhdGVzL21hcC5oYnMuanMiLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsc0ZBQTBDO0FBQ25FLDBCQUEwQjtBQUMxQixpRUFBaUU7QUFDakU7QUFDQSxDQUFDLGdCQUFnQiIsInNvdXJjZXMiOlsid2VicGFjazovL2RqaS1hZXJpYWwtZ2VvcmVmZXJlbmNpbmcvLi9zcmMvdGVtcGxhdGVzL21hcC5oYnM/ZGU4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgSGFuZGxlYmFycyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvaGFuZGxlYmFycy9ydW50aW1lLmpzXCIpO1xuZnVuY3Rpb24gX19kZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIChvYmouX19lc01vZHVsZSA/IG9ialtcImRlZmF1bHRcIl0gOiBvYmopOyB9XG5tb2R1bGUuZXhwb3J0cyA9IChIYW5kbGViYXJzW1wiZGVmYXVsdFwiXSB8fCBIYW5kbGViYXJzKS50ZW1wbGF0ZSh7XCJjb21waWxlclwiOls4LFwiPj0gNC4zLjBcIl0sXCJtYWluXCI6ZnVuY3Rpb24oY29udGFpbmVyLGRlcHRoMCxoZWxwZXJzLHBhcnRpYWxzLGRhdGEpIHtcbiAgICByZXR1cm4gXCI8ZGl2IGlkPVxcXCJtYXBcXFwiPjwvZGl2PlwiO1xufSxcInVzZURhdGFcIjp0cnVlfSk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/templates/map.hbs\n");

/***/ }),

/***/ "./src/main.scss":
/*!***********************!*\
  !*** ./src/main.scss ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWFpbi5zY3NzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RqaS1hZXJpYWwtZ2VvcmVmZXJlbmNpbmcvLi9zcmMvbWFpbi5zY3NzPzI0ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/main.scss\n");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("const ROBOFLOW_SETTINGS = {\n    publishable_key: \"rf_5w20VzQObTXjJhTjq6kad9ubrm33\", // grab from your account settings (you can use it to restrict access to your model)\n\n    model: \"aerial-solar-panels\",   // change to detect something other than solar panels (find other models at https://universe.roboflow.com/browse/aerial)\n                                    // or train your own at https://app.roboflow.com\n    version: 5, // use the version of your model with the best results\n\n    threshold: 0.6, // adjust the confidence threshold upwards if you're getting false positives, downwards if it's missing predictions\n    overlap: 0.5 // how much predictions can overlap each other; not too important here since we combine nearby predictions into a single marker\n};\n\nconst $ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\nwindow.$ = $;\n\nconst _ = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\nwindow._ = _;\n\n$(function() {\n    // setup the initial screen which asks users for their video and flight log CSV\n    var setupDrop = __webpack_require__(/*! ./src/setupDrop.js */ \"./src/setupDrop.js\");\n    setupDrop();\n\n    // load the CV model so it's ready when we want to start using it\n    window.model = null;\n    _.defer(function() {\n        try {\n            roboflow\n            .auth({\n                publishable_key: ROBOFLOW_SETTINGS.publishable_key\n            })\n            .load({\n                model: ROBOFLOW_SETTINGS.model,\n                version: ROBOFLOW_SETTINGS.version,\n            })\n            .then(function(m) {\n                m.configure({\n                    threshold: ROBOFLOW_SETTINGS.threshold,\n                    overlap: ROBOFLOW_SETTINGS.overlap\n                });\n    \n                window.model = m;\n            });\n        } catch (e) {\n            console.error(\"error loading model\", e && e.error);\n        }\n    });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWFpbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlFQUFpRTtBQUNqRTs7QUFFQSxVQUFVLG1CQUFPLENBQUMsb0RBQVE7QUFDMUI7O0FBRUEsVUFBVSxtQkFBTyxDQUFDLCtDQUFRO0FBQzFCOztBQUVBO0FBQ0E7QUFDQSxvQkFBb0IsbUJBQU8sQ0FBQyw4Q0FBMkI7QUFDdkQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsVUFBVTtBQUNWO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RqaS1hZXJpYWwtZ2VvcmVmZXJlbmNpbmcvLi9zcmMvbWFpbi5qcz81NmQ3Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFJPQk9GTE9XX1NFVFRJTkdTID0ge1xuICAgIHB1Ymxpc2hhYmxlX2tleTogXCJyZl81dzIwVnpRT2JUWGpKaFRqcTZrYWQ5dWJybTMzXCIsIC8vIGdyYWIgZnJvbSB5b3VyIGFjY291bnQgc2V0dGluZ3MgKHlvdSBjYW4gdXNlIGl0IHRvIHJlc3RyaWN0IGFjY2VzcyB0byB5b3VyIG1vZGVsKVxuXG4gICAgbW9kZWw6IFwiYWVyaWFsLXNvbGFyLXBhbmVsc1wiLCAgIC8vIGNoYW5nZSB0byBkZXRlY3Qgc29tZXRoaW5nIG90aGVyIHRoYW4gc29sYXIgcGFuZWxzIChmaW5kIG90aGVyIG1vZGVscyBhdCBodHRwczovL3VuaXZlcnNlLnJvYm9mbG93LmNvbS9icm93c2UvYWVyaWFsKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gb3IgdHJhaW4geW91ciBvd24gYXQgaHR0cHM6Ly9hcHAucm9ib2Zsb3cuY29tXG4gICAgdmVyc2lvbjogNSwgLy8gdXNlIHRoZSB2ZXJzaW9uIG9mIHlvdXIgbW9kZWwgd2l0aCB0aGUgYmVzdCByZXN1bHRzXG5cbiAgICB0aHJlc2hvbGQ6IDAuNiwgLy8gYWRqdXN0IHRoZSBjb25maWRlbmNlIHRocmVzaG9sZCB1cHdhcmRzIGlmIHlvdSdyZSBnZXR0aW5nIGZhbHNlIHBvc2l0aXZlcywgZG93bndhcmRzIGlmIGl0J3MgbWlzc2luZyBwcmVkaWN0aW9uc1xuICAgIG92ZXJsYXA6IDAuNSAvLyBob3cgbXVjaCBwcmVkaWN0aW9ucyBjYW4gb3ZlcmxhcCBlYWNoIG90aGVyOyBub3QgdG9vIGltcG9ydGFudCBoZXJlIHNpbmNlIHdlIGNvbWJpbmUgbmVhcmJ5IHByZWRpY3Rpb25zIGludG8gYSBzaW5nbGUgbWFya2VyXG59O1xuXG5jb25zdCAkID0gcmVxdWlyZShcImpxdWVyeVwiKTtcbndpbmRvdy4kID0gJDtcblxuY29uc3QgXyA9IHJlcXVpcmUoXCJsb2Rhc2hcIik7XG53aW5kb3cuXyA9IF87XG5cbiQoZnVuY3Rpb24oKSB7XG4gICAgLy8gc2V0dXAgdGhlIGluaXRpYWwgc2NyZWVuIHdoaWNoIGFza3MgdXNlcnMgZm9yIHRoZWlyIHZpZGVvIGFuZCBmbGlnaHQgbG9nIENTVlxuICAgIHZhciBzZXR1cERyb3AgPSByZXF1aXJlKF9fZGlybmFtZSArIFwiL3NldHVwRHJvcC5qc1wiKTtcbiAgICBzZXR1cERyb3AoKTtcblxuICAgIC8vIGxvYWQgdGhlIENWIG1vZGVsIHNvIGl0J3MgcmVhZHkgd2hlbiB3ZSB3YW50IHRvIHN0YXJ0IHVzaW5nIGl0XG4gICAgd2luZG93Lm1vZGVsID0gbnVsbDtcbiAgICBfLmRlZmVyKGZ1bmN0aW9uKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcm9ib2Zsb3dcbiAgICAgICAgICAgIC5hdXRoKHtcbiAgICAgICAgICAgICAgICBwdWJsaXNoYWJsZV9rZXk6IFJPQk9GTE9XX1NFVFRJTkdTLnB1Ymxpc2hhYmxlX2tleVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5sb2FkKHtcbiAgICAgICAgICAgICAgICBtb2RlbDogUk9CT0ZMT1dfU0VUVElOR1MubW9kZWwsXG4gICAgICAgICAgICAgICAgdmVyc2lvbjogUk9CT0ZMT1dfU0VUVElOR1MudmVyc2lvbixcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbihtKSB7XG4gICAgICAgICAgICAgICAgbS5jb25maWd1cmUoe1xuICAgICAgICAgICAgICAgICAgICB0aHJlc2hvbGQ6IFJPQk9GTE9XX1NFVFRJTkdTLnRocmVzaG9sZCxcbiAgICAgICAgICAgICAgICAgICAgb3ZlcmxhcDogUk9CT0ZMT1dfU0VUVElOR1Mub3ZlcmxhcFxuICAgICAgICAgICAgICAgIH0pO1xuICAgIFxuICAgICAgICAgICAgICAgIHdpbmRvdy5tb2RlbCA9IG07XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcImVycm9yIGxvYWRpbmcgbW9kZWxcIiwgZSAmJiBlLmVycm9yKTtcbiAgICAgICAgfVxuICAgIH0pO1xufSk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/main.js\n");

/***/ }),

/***/ "./src/renderMap.js":
/*!**************************!*\
  !*** ./src/renderMap.js ***!
  \**************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const CONFIG = {\n    // use your own MapBox access token to access your custom maps & usage quota\n    // get yours here: https://account.mapbox.com/access-tokens/create\n    mapboxAccessToken: 'pk.eyJ1IjoieWVsZGFyYnkiLCJhIjoiY2w3czRlcG5qMGxvbDNxbnVoOTUzeW9nNCJ9.RKnzgCuuLaaFzcFsuZWdFQ',\n\n    // if detections are closer than this constant, combine them into a single marker\n    MIN_SEPARATION_OF_DETECTIONS_IN_METERS: 20,\n\n    // wait until a detection is made on this number of distinct frames before showing the marker\n    MIN_DETECTIONS_TO_MAKE_VISIBLE: 3\n}\n\n// Dependency for map rendering\nconst mapboxgl = __webpack_require__(/*! mapbox-gl */ \"./node_modules/mapbox-gl/dist/mapbox-gl.js\");\nwindow.mapboxgl = mapboxgl;\n__webpack_require__(/*! mapbox-gl/dist/mapbox-gl.css */ \"./node_modules/mapbox-gl/dist/mapbox-gl.css\");\nmapboxgl.accessToken = CONFIG.mapboxAccessToken;\n\n// Dependency for CSV parsing\nconst Papa = __webpack_require__(/*! papaparse */ \"./node_modules/papaparse/papaparse.min.js\");\n\n// Dependency for Geospatial calculations \nconst turf = {\n    point: (__webpack_require__(/*! @turf/helpers */ \"./node_modules/@turf/helpers/dist/js/index.js\").point),\n    rhumbDestination: (__webpack_require__(/*! @turf/rhumb-destination */ \"./node_modules/@turf/rhumb-destination/dist/js/index.js\")[\"default\"]),\n    distance: (__webpack_require__(/*! @turf/distance */ \"./node_modules/@turf/distance/dist/js/index.js\")[\"default\"])\n};\nwindow.turf = turf;\n\n// run once to initialize map mode\nvar renderMap = async function(videoFile, flightLogFile) {\n    // render the map UI\n    var mapTemplate = __webpack_require__(/*! ./src/templates/map.hbs */ \"./src/templates/map.hbs\");\n    $('body').html(mapTemplate());\n\n    // parse the flight log from CSV to an array of objects (keyed by header column)\n    const observations = await readCSVFile(flightLogFile);\n\n    // filter the flight log for the first continuous video\n    // and get the extent of the flight path so we can zoom it into view\n    var videoObservations = [];\n    var top = -Infinity, bottom = Infinity, left = Infinity, right = -Infinity;\n    _.find(observations, function(o) {\n        // wait until we're recording a video & stop once that video finishes\n        if(o.isVideo == \"0\") return videoObservations.length;\n\n        // convert from strings to numbers\n        o.latitude = parseFloat(o.latitude);\n        o.longitude = parseFloat(o.longitude);\n\n        videoObservations.push(o);\n\n        if(o.longitude > top) top = o.longitude;\n        if(o.longitude < bottom) bottom = o.longitude;\n        if(o.latitude < left) left = o.latitude;\n        if(o.latitude > right) right = o.latitude;\n    });\n    \n    // create a map view with the default streets styling zoomed out to the full world\n    const map = new mapboxgl.Map({\n        container: 'map',\n        zoom: 1,\n        style: 'mapbox://styles/mapbox/streets-v11'\n    });\n    window.map = map;\n    \n    // wait until the map is initialized to add things to it\n    map.on('load', function() {\n        // GeoJSON representing the flight path\n        var pathGeoJSON = {\n            type: 'geojson',\n            data: {\n                type: 'Feature',\n                geometry: {\n                    type: 'Polygon',\n                    coordinates: [_.map(videoObservations, function(o) {\n                        return [o.longitude, o.latitude];\n                    })]\n                }\n            }\n        };\n\n        map.addSource(\"dronePath\", pathGeoJSON);\n\n        // draw a line around the flight path\n        map.addLayer({\n            'id': 'droneOutline',\n            'type': 'line',\n            'source': 'dronePath',\n            'layout': {},\n            'paint': {\n                'line-color': '#6706CE',\n                'line-width': 3\n            }\n        });\n\n        // add the video to the map (we'll animate it according to the flight path)\n        map.addSource('video', {\n            'type': 'video',\n            'urls': [URL.createObjectURL(videoFile)],\n            'coordinates': [ // start with video in center of path; will get immediately overwritten but needs a default\n                [(top+bottom)/2+0.0007, (left+right)/2 - 0.0007],\n                [(top+bottom)/2+0.0007, (left+right)/2 + 0.0007],\n                [(top+bottom)/2-0.0007, (left+right)/2 + 0.0007],\n                [(top+bottom)/2-0.0007, (left+right)/2 - 0.0007]\n            ]\n        });\n\n        map.addLayer({\n            'id': 'video',\n            'type': 'raster',\n            'source': 'video'\n        });\n\n        // zoom the map to the flight path (with 50px of padding)\n        map.fitBounds([\n            [top, left],\n            [bottom, right]\n        ], {\n            padding: 50\n        });\n\n        var videoSource = map.getSource('video');\n        \n        var fov = 59 * Math.PI / 180; // drone camera field of view in radians; via https://mavicpilots.com/threads/measured-field-of-view-for-mavic-air-59%C2%B0-video-69%C2%B0-photo.85228/\n        var fovAtan = Math.tan(fov); // multiply by altitude to get distance across the video's diagonal\n\n        // used to throttle the ML code so it doesn't make the display laggy\n        var detectionInFlight = false;\n        var lastDetection = 0;\n\n        // keep track of where we've placed markers so we can smooth them out when the same panel is found across multiple frames\n        var foundPoints = [];\n\n        // sync the video with the flight log & use it to update the video's orientation on the map,\n        // look for solar panels using our computer vision model, and plot them on the map with markers\n        var detectFrame = function() {\n            // run this function on every tick\n            requestAnimationFrame(detectFrame);\n\n            // wait for the video to load\n            var video = videoSource.video;\n            if(!video || !video.videoWidth) return;\n\n            // speed the video up 4x so it's not so boring\n            video.playbackRate = 4.0;\n\n            // pull video vars into local scope\n            var {\n                videoWidth,\n                videoHeight,\n                currentTime\n            } = video;\n            \n            // the flight log observations are recorded every 100ms; pull the one corresponding to the current video timestamp\n            var frame = Math.floor(currentTime * 10);\n            var observation = videoObservations[frame%videoObservations.length];\n\n            // store the location of the drone\n            var center = turf.point([observation.longitude, observation.latitude]);\n            var altitude = parseFloat(observation[\"ascent(feet)\"]) * 0.3048; // convert to meters\n\n            // calculate the ground distance shown (diagonal distance from top-left to bottom-right corner)\n            var diagonalDistance = altitude * fovAtan;\n            var distance = diagonalDistance/2; // distance (in meters) from center point to any of the 4 corners\n\n            // the direction the drone is pointed\n            var bearing = (parseFloat(observation[\"compass_heading(degrees)\"]) - 90) % 360;\n            // the number of degrees the top corners of the video are offset from the drone heading\n            var offset = Math.atan(videoHeight / videoWidth) * 180 / Math.PI;\n\n            // calculate the GPS coordinates of the video's four corners by starting at the drone's location and\n            // traveling `distance` meters in the direction of that corner\n            var options = {units: 'meters'};\n            var topLeft = turf.rhumbDestination(center, distance, (bearing-offset+180)%360-180, options).geometry.coordinates;\n            var topRight = turf.rhumbDestination(center, distance, (bearing+offset+180)%360-180, options).geometry.coordinates;\n            var bottomRight = turf.rhumbDestination(center, distance, (bearing-offset)%360-180, options).geometry.coordinates;\n            var bottomLeft = turf.rhumbDestination(center, distance, (bearing+offset)%360-180, options).geometry.coordinates;\n            \n            // orient the video on the map\n            videoSource.setCoordinates([\n                topRight,\n                bottomRight,\n                bottomLeft,\n                topLeft\n            ]);\n\n            // if the model has loaded, we're not already waiting for a prediction to return,\n            // and it's been at least 200ms since we last ran a frame through the vision model,\n            // run a video frame through our computer vision model to detect & plot solar panels\n            if(window.model && !detectionInFlight && Date.now() - lastDetection >= 200) {\n                // pause the video so it doesn't get out of sync\n                detectionInFlight = true;\n                video.pause();\n\n                // run the current frame through the model\n                window.model.detect(video).then(function(predictions) {\n                    // for each solar panel detected, convert its x/y position in the video frame to a GPS coordinate\n                    _.each(predictions, function(p) {\n                        // change coordinate system so the center point of the video is (0, 0) (instead of the top-left point)\n                        // this means that (0, 0) is where our drone is and makes our math easier\n                        var normalized = [p.bbox.y - videoHeight / 2, p.bbox.x - videoWidth / 2];\n\n                        // calculate the distance and bearing of the solar panel relative to the center point\n                        var distanceFromCenterInPixels = Math.sqrt((videoWidth/2-p.bbox.x)*(videoWidth/2-p.bbox.x)+(videoHeight/2-p.bbox.y)*(videoHeight/2-p.bbox.y));\n                        var diagonalDistanceInPixels = Math.sqrt(videoWidth*videoWidth + videoHeight*videoHeight);\n                        var percentOfDiagonal = distanceFromCenterInPixels / diagonalDistanceInPixels;\n                        var distance = percentOfDiagonal * diagonalDistance; // in meters\n\n                        var angle = Math.atan(normalized[0]/(normalized[1]||0.000001)) * 180 / Math.PI;\n                        // if the detection is in the right half of the frame we need to rotate it 180 degrees\n                        if(normalized[1] >= 0) angle += 180;\n\n                        // use that distance and bearing to get the GPS location of the panel\n                        var point = turf.rhumbDestination(center, distance, (bearing + angle)%360, options);\n\n                        // combine detections that are close together so we end up with a single marker per panel\n                        // instead of clusters when a panel is detected across multiple frames of the video\n                        var duplicate = _.find(foundPoints, function(p, i) {\n                            var distanceFromPoint = turf.distance(point, p.location, {units: 'kilometers'});\n                            if(distanceFromPoint < CONFIG.MIN_SEPARATION_OF_DETECTIONS_IN_METERS/1000) {\n                                // if we have already found this panel, average the position of the new observation with\n                                // its existing position\n                                p.points.push(point.geometry.coordinates);\n                                var location = [0, 0];\n                                _.each(p.points, function(point) {\n                                    location[0] += point[0];\n                                    location[1] += point[1];\n                                });\n                                location[0] = location[0]/p.points.length;\n                                location[1] = location[1]/p.points.length;\n                                p.location = turf.point(location);\n\n                                // only show a panel if it has been detected at least twice\n                                // (this prevents noisy predictions from clogging up the map)\n                                if(!p.marker && p.points.length >= CONFIG.MIN_DETECTIONS_TO_MAKE_VISIBLE) {\n                                    var marker = new mapboxgl.Marker()\n                                        .setLngLat(location)\n                                        .addTo(map);\n\n                                    p.marker = marker;\n                                } else if(p.marker) {\n                                    // if the marker is already shown, update its position to the new average\n                                    p.marker.setLngLat(location);\n                                }\n\n                                return true;\n                            }\n                        });\n\n                        // if this is a new point, save it\n                        if(!duplicate) {\n                            foundPoints.push({\n                                location: point,\n                                points: [point.geometry.coordinates],\n                                marker: null\n                            });\n                        }\n                    });\n                }).finally(function() {\n                    // then start the video playing again\n                    detectionInFlight = false;\n                    lastDetection = Date.now();\n                    video.play();\n                });\n            }\n        };\n\n        // start animating & detecting frames\n        detectFrame();\n    });\n};\n\nconst readCSVFile = function(file) {\n    return new Promise(function(resolve) {\n        var reader = new FileReader();\n        reader.onload = function (e) {\n            var text = e.target.result;\n            var results = Papa.parse(text, {\n                header: true,\n                transformHeader:function(h) { return h.trim(); }\n            });\n            resolve(results.data);\n        }\n        reader.readAsText(file);\n    });\n};\n\nmodule.exports = renderMap;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/renderMap.js\n");

/***/ }),

/***/ "./src/setupDrop.js":
/*!**************************!*\
  !*** ./src/setupDrop.js ***!
  \**************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var flightLogFile, videoFile;\n\nvar setupDrop = function() {\n    // if we've already got our files, switch to map view\n    if(flightLogFile && videoFile) {\n        var renderMap = __webpack_require__(/*! ./src/renderMap.js */ \"./src/renderMap.js\");\n        renderMap(videoFile, flightLogFile);\n        return;\n    }\n\n    // render the UI\n    var dropTemplate = __webpack_require__(/*! ./src/templates/drop.hbs */ \"./src/templates/drop.hbs\");\n    $('body').html(dropTemplate({\n        flightLogFile: flightLogFile,\n        videoFile: videoFile\n    }));\n\n    // setup click + drag & drop listeners\n    $('#videoButton').click(function() {\n        $('#videoInput').click();\n    });\n\n    $('#flightLogButton').click(function() {\n        $('#flightLogInput').click();\n    });\n\n    var onEnter = function(e) {\n        $('#dropContainer').removeClass(\"bg-gray-900\").addClass(\"bg-green-900\");\n\n        e.preventDefault();\n        e.stopPropagation();\n    };\n\n    var onLeave = function(e) {\n        $('#dropContainer').addClass(\"bg-gray-900\").removeClass(\"bg-green-900\");\n\n        e.preventDefault();\n        e.stopPropagation();\n    };\n\n    var onDrop = function(e) {\n        $('#dropContainer').addClass(\"bg-gray-900\").removeClass(\"bg-gray-700\");\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        _.each(e.originalEvent.dataTransfer.files, function(file) {\n            if(file.type && file.type.indexOf(\"video/\") == 0) {\n                videoFile = file;\n            } else if(file.type && file.type.indexOf(\"/csv\") >= 0) {\n                flightLogFile = file;\n            }\n        });\n\n        setupDrop();\n    };\n\n    $('#dropContainer').bind({\n        dragenter: onEnter,\n        dragover: onEnter,\n        dragleave: onLeave,\n        drop: onDrop,\n        dragdrop: onDrop\n    });\n\n    $('#videoInput').change(function(e) {\n        videoFile = e.currentTarget.files[0];\n        setupDrop();\n    });\n\n    $('#flightLogInput').change(function(e) {\n        flightLogFile = e.currentTarget.files[0];\n        setupDrop();\n    });\n};\n\nmodule.exports = setupDrop;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2V0dXBEcm9wLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixtQkFBTyxDQUFDLDhDQUEyQjtBQUMzRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx1QkFBdUIsbUJBQU8sQ0FBQywwREFBaUM7QUFDaEU7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGppLWFlcmlhbC1nZW9yZWZlcmVuY2luZy8uL3NyYy9zZXR1cERyb3AuanM/NGVhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZmxpZ2h0TG9nRmlsZSwgdmlkZW9GaWxlO1xuXG52YXIgc2V0dXBEcm9wID0gZnVuY3Rpb24oKSB7XG4gICAgLy8gaWYgd2UndmUgYWxyZWFkeSBnb3Qgb3VyIGZpbGVzLCBzd2l0Y2ggdG8gbWFwIHZpZXdcbiAgICBpZihmbGlnaHRMb2dGaWxlICYmIHZpZGVvRmlsZSkge1xuICAgICAgICB2YXIgcmVuZGVyTWFwID0gcmVxdWlyZShfX2Rpcm5hbWUgKyBcIi9yZW5kZXJNYXAuanNcIik7XG4gICAgICAgIHJlbmRlck1hcCh2aWRlb0ZpbGUsIGZsaWdodExvZ0ZpbGUpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gcmVuZGVyIHRoZSBVSVxuICAgIHZhciBkcm9wVGVtcGxhdGUgPSByZXF1aXJlKF9fZGlybmFtZSArIFwiL3RlbXBsYXRlcy9kcm9wLmhic1wiKTtcbiAgICAkKCdib2R5JykuaHRtbChkcm9wVGVtcGxhdGUoe1xuICAgICAgICBmbGlnaHRMb2dGaWxlOiBmbGlnaHRMb2dGaWxlLFxuICAgICAgICB2aWRlb0ZpbGU6IHZpZGVvRmlsZVxuICAgIH0pKTtcblxuICAgIC8vIHNldHVwIGNsaWNrICsgZHJhZyAmIGRyb3AgbGlzdGVuZXJzXG4gICAgJCgnI3ZpZGVvQnV0dG9uJykuY2xpY2soZnVuY3Rpb24oKSB7XG4gICAgICAgICQoJyN2aWRlb0lucHV0JykuY2xpY2soKTtcbiAgICB9KTtcblxuICAgICQoJyNmbGlnaHRMb2dCdXR0b24nKS5jbGljayhmdW5jdGlvbigpIHtcbiAgICAgICAgJCgnI2ZsaWdodExvZ0lucHV0JykuY2xpY2soKTtcbiAgICB9KTtcblxuICAgIHZhciBvbkVudGVyID0gZnVuY3Rpb24oZSkge1xuICAgICAgICAkKCcjZHJvcENvbnRhaW5lcicpLnJlbW92ZUNsYXNzKFwiYmctZ3JheS05MDBcIikuYWRkQ2xhc3MoXCJiZy1ncmVlbi05MDBcIik7XG5cbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIH07XG5cbiAgICB2YXIgb25MZWF2ZSA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgJCgnI2Ryb3BDb250YWluZXInKS5hZGRDbGFzcyhcImJnLWdyYXktOTAwXCIpLnJlbW92ZUNsYXNzKFwiYmctZ3JlZW4tOTAwXCIpO1xuXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9O1xuXG4gICAgdmFyIG9uRHJvcCA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgJCgnI2Ryb3BDb250YWluZXInKS5hZGRDbGFzcyhcImJnLWdyYXktOTAwXCIpLnJlbW92ZUNsYXNzKFwiYmctZ3JheS03MDBcIik7XG5cbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgICAgIF8uZWFjaChlLm9yaWdpbmFsRXZlbnQuZGF0YVRyYW5zZmVyLmZpbGVzLCBmdW5jdGlvbihmaWxlKSB7XG4gICAgICAgICAgICBpZihmaWxlLnR5cGUgJiYgZmlsZS50eXBlLmluZGV4T2YoXCJ2aWRlby9cIikgPT0gMCkge1xuICAgICAgICAgICAgICAgIHZpZGVvRmlsZSA9IGZpbGU7XG4gICAgICAgICAgICB9IGVsc2UgaWYoZmlsZS50eXBlICYmIGZpbGUudHlwZS5pbmRleE9mKFwiL2NzdlwiKSA+PSAwKSB7XG4gICAgICAgICAgICAgICAgZmxpZ2h0TG9nRmlsZSA9IGZpbGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHNldHVwRHJvcCgpO1xuICAgIH07XG5cbiAgICAkKCcjZHJvcENvbnRhaW5lcicpLmJpbmQoe1xuICAgICAgICBkcmFnZW50ZXI6IG9uRW50ZXIsXG4gICAgICAgIGRyYWdvdmVyOiBvbkVudGVyLFxuICAgICAgICBkcmFnbGVhdmU6IG9uTGVhdmUsXG4gICAgICAgIGRyb3A6IG9uRHJvcCxcbiAgICAgICAgZHJhZ2Ryb3A6IG9uRHJvcFxuICAgIH0pO1xuXG4gICAgJCgnI3ZpZGVvSW5wdXQnKS5jaGFuZ2UoZnVuY3Rpb24oZSkge1xuICAgICAgICB2aWRlb0ZpbGUgPSBlLmN1cnJlbnRUYXJnZXQuZmlsZXNbMF07XG4gICAgICAgIHNldHVwRHJvcCgpO1xuICAgIH0pO1xuXG4gICAgJCgnI2ZsaWdodExvZ0lucHV0JykuY2hhbmdlKGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgZmxpZ2h0TG9nRmlsZSA9IGUuY3VycmVudFRhcmdldC5maWxlc1swXTtcbiAgICAgICAgc2V0dXBEcm9wKCk7XG4gICAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNldHVwRHJvcDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/setupDrop.js\n");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["vendors-node_modules_turf_distance_dist_js_index_js-node_modules_turf_rhumb-destination_dist_-4adfba"], () => (__webpack_exec__("./src/main.js"), __webpack_exec__("./src/main.scss")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);